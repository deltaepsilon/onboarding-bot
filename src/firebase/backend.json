{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "User",
      "description": "Represents a user (new Slack hire) who is undergoing onboarding.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity. The specific format and generation strategy depend on the target database implementation."
        },
        "slackUserId": {
          "type": "string",
          "description": "The user's ID in Slack."
        },
        "employmentType": {
          "type": [
            "string",
            "null"
          ],
          "description": "The employment type of the user (e.g., Full-time, Contract). Null if not yet identified."
        }
      },
      "required": [
        "id",
        "slackUserId"
      ]
    },
    "OnboardingItem": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "OnboardingItem",
      "description": "Represents a single to-do item in the onboarding process.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the OnboardingItem entity. The specific format and generation strategy depend on the target database implementation."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the unique identifier of the related User entity this onboarding item belongs to. (Relationship: User 1:N OnboardingItem)"
        },
        "description": {
          "type": "string",
          "description": "A description of the onboarding item."
        },
        "status": {
          "type": "string",
          "enum": [
            "in-progress",
            "completed",
            "skipped"
          ],
          "description": "The current status of the onboarding item."
        }
      },
      "required": [
        "id",
        "userId",
        "description",
        "status"
      ]
    },
    "Feedback": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "Feedback",
      "description": "Represents user feedback collected during the onboarding process.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Feedback entity. The specific format and generation strategy depend on the target database implementation."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the unique identifier of the related User entity that provided the feedback. (Relationship: User 1:N Feedback)"
        },
        "onboardingItemId": {
          "type": [
            "string",
            "null"
          ],
          "description": "Reference to the unique identifier of the related OnboardingItem entity this feedback is related to. (Relationship: OnboardingItem 1:N Feedback). Null if the feedback is general."
        },
        "text": {
          "type": "string",
          "description": "The text of the feedback provided by the user."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of when the feedback was submitted."
        }
      },
      "required": [
        "id",
        "userId",
        "text",
        "timestamp"
      ]
    },
    "ChatMessage": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "title": "ChatMessage",
      "description": "Represents a single message in a conversation.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The content of the message."
        },
        "role": {
          "type": "string",
          "enum": ["user", "model"],
          "description": "Who sent the message: the user or the AI model."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of when the message was sent."
        }
      },
      "required": ["text", "role", "timestamp"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "description": "Collection containing user profile documents, keyed by user ID.",
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "params": [
            { "name": "userId", "description": "The unique ID of the user." }
          ]
        }
      },
      {
        "path": "/onboardingItems/{onboardingItemId}",
        "definition": {
          "description": "Collection containing onboarding items for each user, keyed by item ID.",
          "entityName": "OnboardingItem",
          "schema": { "$ref": "#/backend/entities/OnboardingItem" },
          "params": [
            { "name": "onboardingItemId", "description": "The unique ID of the onboarding item." }
          ]
        }
      },
      {
        "path": "/feedback/{feedbackId}",
        "definition": {
          "description": "Collection containing feedback entries, keyed by feedback ID.",
          "entityName": "Feedback",
          "schema": { "$ref": "#/backend/entities/Feedback" },
          "params": [
            { "name": "feedbackId", "description": "The unique ID of the feedback entry." }
          ]
        }
      },
      {
        "path": "/slackConversations/{conversationId}/messages/{messageId}",
        "definition": {
          "description": "Sub-collection storing chat messages for a specific Slack conversation (channel or DM), keyed by message ID.",
          "entityName": "ChatMessage",
          "schema": { "$ref": "#/backend/entities/ChatMessage" },
          "params": [
            { "name": "conversationId", "description": "The Slack channel or DM ID." },
            { "name": "messageId", "description": "The unique ID for the message." }
          ]
        }
      }
    ]
  }
}
